{"version":3,"sources":["Components/PhonebookForm/PhonebookForm.module.css","redux/contacts/contacts-selectors.js","redux/contacts/contact-actions.js","redux/contacts/contact-operations.js","Components/PhonebookForm/PhonebookForm.jsx","Components/ContactList/ContactItem.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","App.js","redux/contacts/contact-reducer.js","redux/store.js","index.js"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","contact","name","toLowerCase","includes","toLocaleLowerCase","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","fetchAddContactRequest","fetchAddContactSuccess","fetchAddContactError","fetchDeleteContactRequest","fetchDeleteContactSuccess","fetchDeleteContactError","changeFilter","axios","defaults","baseURL","PhonebookForm","useState","number","setNumber","setName","dispatch","useDispatch","useSelector","validateForm","filterContact","find","alert","handleUniq","className","st","form","onSubmit","e","preventDefault","post","then","data","catch","error","addContact","title","input","type","value","onChange","target","button","useStyles","createUseStyles","listItem","width","display","alignItems","padding","background","marginRight","fontWeight","backgroundColor","boxShadow","borderRadius","cursor","ContactItem","classes","onClick","id","a","delete","list","margin","ContactList","useEffect","get","map","flexDirection","marginBottom","Filter","App","createReducer","_","payload","combineReducers","rootReducer","contactsReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2856a7f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"PhonebookForm_form__126om\",\"title\":\"PhonebookForm_title__20-Ws\",\"input\":\"PhonebookForm_input__VnM60\",\"button\":\"PhonebookForm_button__1WHy8\"};","import { createSelector } from '@reduxjs/toolkit';\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) =>\r\n    contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLocaleLowerCase()),\r\n    ),\r\n);\r\n\r\n// export const getVisibleContacts = state => {\r\n//   const contacts = getContacts(state);\r\n//   const filter = getFilter(state);\r\n\r\n//   return contacts.filter(contact =>\r\n//     contact.name.toLowerCase().includes(filter.toLocaleLowerCase()),\r\n//   );\r\n// };\r\n","// import types from './contact-types';\r\n// import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\nexport const fetchAddContactRequest = createAction(\r\n  'contacts/fetchAddContactRequest',\r\n);\r\nexport const fetchAddContactSuccess = createAction(\r\n  'contacts/fetchAddContactSuccess',\r\n);\r\nexport const fetchAddContactError = createAction(\r\n  'contacts/fetchAddContactError',\r\n);\r\n\r\nexport const fetchDeleteContactRequest = createAction(\r\n  'contacts/fetchDeleteContactRequest',\r\n);\r\nexport const fetchDeleteContactSuccess = createAction(\r\n  'contacts/fetchDeleteContactSuccess',\r\n);\r\nexport const fetchDeleteContactError = createAction(\r\n  'contacts/fetchDeleteContactError',\r\n);\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  fetchAddContactError,\r\n  fetchAddContactSuccess,\r\n  fetchAddContactRequest,\r\n  fetchContactsRequest,\r\n  fetchContactsError,\r\n  fetchContactsSuccess,\r\n  fetchDeleteContactRequest,\r\n  fetchDeleteContactSuccess,\r\n  fetchDeleteContactError,\r\n} from './contact-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4000';\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get(`/contacts`)\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n  dispatch(fetchAddContactRequest());\r\n  axios\r\n    .post(`/contacts`, contact)\r\n    .then(({ data }) => dispatch(fetchAddContactSuccess(data)))\r\n    .catch(error => dispatch(fetchAddContactError(error)));\r\n};\r\n\r\nexport const deleteContact = id => async dispatch => {\r\n  dispatch(fetchDeleteContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(fetchDeleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(fetchDeleteContactError(error));\r\n  }\r\n};\r\n","import { useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport st from './PhonebookForm.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\nimport { addContact } from '../../redux/contacts/contact-operations';\r\n\r\nconst PhonebookForm = () => {\r\n  const [number, setNumber] = useState('');\r\n  const [name, setName] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n\r\n  const handleNameChange = e => {\r\n    setName(e.target.value);\r\n  };\r\n  const handleNumberChange = e => {\r\n    setNumber(e.target.value);\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const isValidated = validateForm();\r\n    if (!isValidated) return;\r\n    dispatch(addContact(name, number));\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n  const handleUniq = ({ name }) => {\r\n    const filterContact = !!contacts.find(contact => contact.name === name);\r\n    filterContact && alert(`Contact is already in the Phonebook`);\r\n    return !filterContact;\r\n  };\r\n  const validateForm = () => {\r\n    if (!name || !number) {\r\n      alert('Please Ğµnter data!');\r\n      setName('');\r\n      setNumber('');\r\n      return false;\r\n    }\r\n\r\n    return handleUniq(name);\r\n  };\r\n\r\n  return (\r\n    <form className={st.form} onSubmit={handleSubmit}>\r\n      <label className={st.title}>\r\n        Name\r\n        <input\r\n          className={st.input}\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={handleNameChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          className={st.input}\r\n          type=\"text\"\r\n          value={number}\r\n          onChange={handleNumberChange}\r\n        />\r\n      </label>\r\n      <button className={st.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\n// PhonebookForm.propTypes = {\r\n//   onSubmit: PropTypes.func.isRequired,\r\n//   onCheckUniq: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default PhonebookForm;\r\n","import { createUseStyles } from 'react-jss';\r\nimport {  useDispatch } from 'react-redux';\r\n// import PropTypes from 'prop-types';\r\nimport { deleteContact } from '../../redux/contacts/contact-operations';\r\n\r\n\r\nconst useStyles = createUseStyles({\r\n  listItem: {\r\n    width: 300,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n    background: 'linear-gradient(to left, #f8ab8d 0%, white, #f8ab8d)',\r\n  },\r\n  name: {\r\n    marginRight: 'auto',\r\n  },\r\n  number: {\r\n    fontWeight: '500',\r\n    marginRight: 'auto',\r\n  },\r\n  button: {\r\n    backgroundColor: 'rgb(184, 92, 80)',\r\n    boxShadow: '0px 0px 3px 0px black',\r\n    borderRadius: 5,\r\n    cursor: 'pointer',\r\n  },\r\n});\r\nconst ContactItem = ({ contact }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const handleDelete = () => dispatch(deleteContact(contact.id));\r\n  return (\r\n    <li className={classes.listItem}>\r\n      <p className={classes.name}>{contact.name}</p>\r\n      <p className={classes.number}>{contact.number}</p>\r\n      <button className={classes.button} onClick={handleDelete}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\n// ContactItem.propTypes = {\r\n//   name: PropTypes.string.isRequired,\r\n//   number: PropTypes.string.isRequired,\r\n//   id: PropTypes.string.isRequired,\r\n//   onDelete: PropTypes.func.isRequired,\r\n// };\r\nexport default ContactItem;\r\n","import ContactItem from './ContactItem';\r\n// import PropTypes from 'prop-types';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\r\nimport { useEffect } from 'react';\r\nimport { fetchContacts } from '../../redux/contacts/contact-operations';\r\n\r\nconst useStyles = createUseStyles({\r\n  list: {\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n});\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, []);\r\n\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ul className={classes.list}>\r\n      {contacts.map(contact => (\r\n        <ContactItem key={contact.id} contact={contact} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n// ContactList.propTypes = {\r\n//   onDelete: PropTypes.func.isRequired,\r\n//   contacts: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       id: PropTypes.string,\r\n//       name: PropTypes.string,\r\n//       number: PropTypes.string,\r\n//     }),\r\n//   ).isRequired,\r\n// };\r\n\r\nexport default ContactList;\r\n","// import PropTypes from 'prop-types';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport { changeFilter } from '../../redux/contacts/contact-actions';\r\n\r\nconst useStyles = createUseStyles({\r\n  title: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: 200,\r\n    marginBottom: 20,\r\n  },\r\n});\r\n\r\nconst Filter = () => {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(getFilter);\r\n\r\n  const handleFilterChange = e => {\r\n    dispatch(changeFilter(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <label className={classes.title}>\r\n      Find contacts by name\r\n      <input type=\"text\" value={filter} onChange={handleFilterChange} />\r\n    </label>\r\n  );\r\n};\r\n\r\n// Filter.propTypes = {\r\n//   onChange: PropTypes.func.isRequired,\r\n//   value: PropTypes.string,\r\n// };\r\n\r\nexport default Filter;\r\n","// import { useState, useEffect } from 'react';\r\nimport PhonebookForm from './Components/PhonebookForm';\r\nimport ContactList from './Components/ContactList';\r\nimport Filter from './Components/Filter';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <PhonebookForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","\r\nimport { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchAddContactSuccess,\r\n  changeFilter,\r\n  fetchContactsSuccess,\r\n  fetchDeleteContactSuccess,\r\n} from './contact-actions';\r\n\r\nconst initialState = {\r\n  items: [],\r\n};\r\n\r\nconst items = createReducer(initialState.items, {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [fetchAddContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [fetchDeleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\n// const loading = createReducer(false, {\r\n//   [fetchAddContactRequest]: true,\r\n//   [fetchAddContactSuccess]: false,\r\n//   [fetchAddContactError]: false,\r\n// });\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","// import { createStore } from 'redux';\r\n// import { combineReducers } from 'redux';\r\nimport contactsReducer from './contacts/contact-reducer';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { configureStore, combineReducers } from '@reduxjs/toolkit';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst store = configureStore({ reducer: rootReducer });\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}